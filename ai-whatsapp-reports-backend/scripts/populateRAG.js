const ragService = require('../utils/ragService');

async function populateKnowledgeBase() {
  console.log('üöÄ Iniciando popula√ß√£o da base de conhecimento...');
  
  try {
    await ragService.initialize();
    
    // Exemplos de conhecimento empresarial
    const knowledgeItems = [
      {
        text: `
AN√ÅLISE SWOT - Metodologia de An√°lise Estrat√©gica

A An√°lise SWOT (Strengths, Weaknesses, Opportunities, Threats) √© uma ferramenta fundamental para an√°lise estrat√©gica empresarial.

COMPONENTES:
- For√ßas (Strengths): Caracter√≠sticas internas positivas da empresa
- Fraquezas (Weaknesses): Aspectos internos que precisam ser melhorados
- Oportunidades (Opportunities): Fatores externos favor√°veis ao neg√≥cio
- Amea√ßas (Threats): Elementos externos que podem prejudicar a empresa

COMO APLICAR:
1. Levante dados sobre o ambiente interno e externo
2. Classifique cada item nas 4 categorias
3. Priorize os itens mais relevantes
4. Desenvolva estrat√©gias baseadas na matriz SWOT
5. Monitore e atualize regularmente

ESTRAT√âGIAS SWOT:
- FO (For√ßas + Oportunidades): Estrat√©gias de crescimento
- FA (For√ßas + Amea√ßas): Estrat√©gias defensivas
- FrO (Fraquezas + Oportunidades): Estrat√©gias de desenvolvimento
- FrA (Fraquezas + Amea√ßas): Estrat√©gias de sobreviv√™ncia
        `,
        metadata: {
          title: 'An√°lise SWOT',
          category: 'metodologia',
          type: 'strategic_analysis'
        }
      },
      {
        text: `
INDICADORES FINANCEIROS ESSENCIAIS

LIQUIDEZ:
- Liquidez Corrente = Ativo Circulante / Passivo Circulante
- Liquidez Seca = (Ativo Circulante - Estoques) / Passivo Circulante
- Liquidez Imediata = Dispon√≠vel / Passivo Circulante

RENTABILIDADE:
- ROE (Return on Equity) = Lucro L√≠quido / Patrim√¥nio L√≠quido
- ROA (Return on Assets) = Lucro L√≠quido / Ativo Total
- Margem L√≠quida = Lucro L√≠quido / Receita L√≠quida
- Margem Bruta = Lucro Bruto / Receita L√≠quida

ENDIVIDAMENTO:
- √çndice de Endividamento = Passivo Total / Ativo Total
- Composi√ß√£o do Endividamento = Passivo Circulante / Passivo Total
- Grau de Alavancagem = Passivo Total / Patrim√¥nio L√≠quido

ATIVIDADE:
- Giro do Ativo = Receita L√≠quida / Ativo Total
- Giro do Estoque = CMV / Estoque M√©dio
- Prazo M√©dio de Recebimento = (Contas a Receber / Vendas) √ó 365
        `,
        metadata: {
          title: 'Indicadores Financeiros',
          category: 'financeiro',
          type: 'kpi'
        }
      },
      {
        text: `
MODELO DE NEG√ìCIOS CANVAS

O Business Model Canvas √© uma ferramenta visual para desenvolver e descrever modelos de neg√≥cio.

OS 9 BLOCOS:
1. SEGMENTOS DE CLIENTES: Quem s√£o seus clientes-alvo?
2. PROPOSTA DE VALOR: Que valor voc√™ entrega aos clientes?
3. CANAIS: Como voc√™ alcan√ßa e entrega valor aos clientes?
4. RELACIONAMENTO COM CLIENTES: Que tipo de relacionamento mant√©m?
5. FONTES DE RECEITA: Como o neg√≥cio gera dinheiro?
6. RECURSOS-CHAVE: Quais recursos s√£o essenciais?
7. ATIVIDADES-CHAVE: Quais atividades s√£o fundamentais?
8. PARCERIAS-CHAVE: Quem s√£o os parceiros e fornecedores?
9. ESTRUTURA DE CUSTOS: Quais s√£o os custos principais?

BENEF√çCIOS:
- Vis√£o hol√≠stica do neg√≥cio
- Facilita comunica√ß√£o da estrat√©gia
- Identifica pontos de melhoria
- Permite compara√ß√£o com concorrentes
- Base para plano de neg√≥cios
        `,
        metadata: {
          title: 'Business Model Canvas',
          category: 'metodologia',
          type: 'business_model'
        }
      },
      {
        text: `
AN√ÅLISE DE CONCORR√äNCIA - FRAMEWORK COMPLETO

IDENTIFICA√á√ÉO DE CONCORRENTES:
- Concorrentes Diretos: Mesmo produto/servi√ßo, mesmo mercado
- Concorrentes Indiretos: Produtos substitutos
- Concorrentes Potenciais: Podem entrar no mercado

DIMENS√ïES DE AN√ÅLISE:
1. PRODUTO/SERVI√áO:
   - Caracter√≠sticas e funcionalidades
   - Qualidade e diferencia√ß√£o
   - Portfolio e variedade
   - Inova√ß√£o e desenvolvimento

2. PRE√áOS E ESTRAT√âGIA:
   - Estrat√©gia de precifica√ß√£o
   - Posicionamento no mercado
   - Promo√ß√µes e descontos
   - Modelo de receita

3. MARKETING E VENDAS:
   - Canais de distribui√ß√£o
   - Estrat√©gias de comunica√ß√£o
   - Presen√ßa digital
   - For√ßa de vendas

4. OPERA√á√ïES:
   - Capacidade produtiva
   - Efici√™ncia operacional
   - Tecnologia utilizada
   - Cadeia de suprimentos

5. FINANCEIRO:
   - Participa√ß√£o de mercado
   - Crescimento de receita
   - Lucratividade
   - Investimentos

FERRAMENTAS:
- Matriz de Posicionamento
- An√°lise de Gap
- Benchmarking
- Mystery Shopping
- An√°lise de Sites e Redes Sociais
        `,
        metadata: {
          title: 'An√°lise de Concorr√™ncia',
          category: 'market_intelligence',
          type: 'competitive_analysis'
        }
      },
      {
        text: `
METODOLOGIAS √ÅGEIS PARA NEG√ìCIOS

SCRUM PARA NEG√ìCIOS:
- Sprints de planejamento estrat√©gico
- Daily standups para alinhamento de equipe
- Reviews para avalia√ß√£o de resultados
- Retrospectivas para melhoria cont√≠nua

LEAN STARTUP:
- Build-Measure-Learn (Construir-Medir-Aprender)
- MVP (Minimum Viable Product)
- Pivoting (mudan√ßa de dire√ß√£o baseada em dados)
- Validated Learning

DESIGN THINKING:
1. Empatizar: Entender o usu√°rio
2. Definir: Identificar o problema
3. Idear: Gerar solu√ß√µes
4. Prototipar: Criar vers√µes de teste
5. Testar: Validar com usu√°rios

OKRs (Objectives and Key Results):
- Objetivos: O que queremos alcan√ßar
- Resultados-chave: Como medimos o progresso
- Ciclos trimestrais
- Transpar√™ncia organizacional
- Foco em impacto

KANBAN:
- Visualiza√ß√£o do fluxo de trabalho
- Limita√ß√£o de trabalho em progresso
- Melhoria cont√≠nua
- Flexibilidade de processo
        `,
        metadata: {
          title: 'Metodologias √Ågeis',
          category: 'metodologia',
          type: 'agile'
        }
      }
    ];

    console.log(`üìö Adicionando ${knowledgeItems.length} itens de conhecimento...`);
    
    for (const item of knowledgeItems) {
      await ragService.addKnowledge(item.text, item.metadata);
      console.log(`‚úÖ Adicionado: ${item.metadata.title}`);
    }
    
    const stats = await ragService.getStats();
    console.log('\nüìä Estat√≠sticas finais:', stats);
    console.log('\nüéâ Base de conhecimento populada com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro ao popular base de conhecimento:', error);
  }
}

// Executa se chamado diretamente
if (require.main === module) {
  populateKnowledgeBase().then(() => {
    console.log('‚ú® Processo conclu√≠do!');
    process.exit(0);
  });
}

module.exports = { populateKnowledgeBase };
