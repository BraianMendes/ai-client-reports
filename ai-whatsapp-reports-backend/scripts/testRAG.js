const axios = require('axios');

const BASE_URL = 'http://localhost:3001';

async function testRAGSystem() {
  console.log('üß™ Testing RAG System...\n');

  try {
    // 1. Testar estat√≠sticas
    console.log('üìä 1. Checking RAG statistics...');
    const statsResponse = await axios.get(`${BASE_URL}/rag/stats`);
    console.log('Statistics:', statsResponse.data);
    console.log('‚úÖ Statistics obtained successfully!\n');

    // 2. Testar busca no RAG
    console.log('üîç 2. Testing RAG search...');
    const searchResponse = await axios.post(`${BASE_URL}/rag/search`, {
      query: 'Como fazer an√°lise SWOT',
      topK: 3,
      threshold: 0.3
    });
    console.log('Resultados da busca:', searchResponse.data.results.length, 'documentos encontrados');
    if (searchResponse.data.results.length > 0) {
      console.log('Primeiro resultado:', {
        similarity: searchResponse.data.results[0].similarity,
        title: searchResponse.data.results[0].metadata?.title,
        excerpt: searchResponse.data.results[0].content.substring(0, 200) + '...'
      });
    }
    console.log('‚úÖ Busca funcionando!\n');

    // 3. Testar an√°lise com RAG integrado
    console.log('ü§ñ 3. Testing analysis with integrated RAG...');
    const analysisResponse = await axios.post(`${BASE_URL}/analyze`, {
      message: 'Como posso fazer uma an√°lise SWOT da minha empresa de tecnologia?',
      userId: 'test-user-rag'
    });
    
    console.log('Resposta da an√°lise (primeiros 300 caracteres):');
    console.log(analysisResponse.data.report.substring(0, 300) + '...');
    console.log('‚úÖ An√°lise com RAG funcionando!\n');

    // 4. Testar com pergunta sobre indicadores financeiros
    console.log('üìà 4. Testing question about financial indicators...');
    const financialResponse = await axios.post(`${BASE_URL}/analyze`, {
      message: 'Quais indicadores financeiros devo acompanhar na minha empresa?',
      userId: 'test-user-rag'
    });
    
    console.log('Resposta sobre indicadores (primeiros 300 caracteres):');
    console.log(financialResponse.data.report.substring(0, 300) + '...');
    console.log('‚úÖ Pergunta sobre indicadores respondida!\n');

    // 5. Adicionar novo conhecimento
    console.log('‚ûï 5. Testing addition of new knowledge...');
    const addKnowledgeResponse = await axios.post(`${BASE_URL}/rag/add-knowledge`, {
      text: `
AN√ÅLISE PESTEL - Framework de An√°lise Macro-Ambiental

A an√°lise PESTEL examina fatores externos que afetam uma organiza√ß√£o:

P - POL√çTICO: Pol√≠ticas governamentais, regulamenta√ß√µes, estabilidade pol√≠tica
E - ECON√îMICO: Taxas de juros, infla√ß√£o, crescimento econ√¥mico, desemprego
S - SOCIAL: Demografia, estilos de vida, educa√ß√£o, distribui√ß√£o de renda
T - TECNOL√ìGICO: Inova√ß√µes, automa√ß√£o, P&D, obsolesc√™ncia tecnol√≥gica
E - ECOL√ìGICO: Sustentabilidade, mudan√ßas clim√°ticas, regulamenta√ß√µes ambientais
L - LEGAL: Leis trabalhistas, prote√ß√£o ao consumidor, direitos autorais

Como aplicar:
1. Identifique fatores relevantes para cada categoria
2. Avalie o impacto de cada fator (alto, m√©dio, baixo)
3. Determine a probabilidade de ocorr√™ncia
4. Desenvolva estrat√©gias para aproveitar oportunidades e mitigar amea√ßas
5. Monitore mudan√ßas regularmente
      `,
      metadata: {
        title: 'An√°lise PESTEL',
        category: 'metodologia',
        type: 'strategic_analysis'
      }
    });
    
    console.log('Conhecimento adicionado:', addKnowledgeResponse.data);
    console.log('‚úÖ Novo conhecimento adicionado!\n');

    // 6. Verificar estat√≠sticas atualizadas
    console.log('üìä 6. Verificando estat√≠sticas atualizadas...');
    const finalStatsResponse = await axios.get(`${BASE_URL}/rag/stats`);
    console.log('Estat√≠sticas finais:', finalStatsResponse.data);
    console.log('‚úÖ Estat√≠sticas atualizadas!\n');

    console.log('üéâ TODOS OS TESTES PASSARAM! Sistema RAG funcionando perfeitamente!');

  } catch (error) {
    console.error('‚ùå Erro no teste:', error.response?.data || error.message);
  }
}

// Executa os testes
if (require.main === module) {
  console.log('‚è≥ Aguardando 3 segundos para o servidor inicializar...');
  setTimeout(testRAGSystem, 3000);
}

module.exports = { testRAGSystem };
